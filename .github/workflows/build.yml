name: Build and Release Plugin

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read_version.outputs.version }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Prepare Build
      run: |
        if [ -f gradle.properties ]; then
          sed -i '/org.gradle.java.home/d' gradle.properties
        fi
        chmod +x gradlew

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
    
    - name: Build with Gradle
      run: ./gradlew clean build --info --stacktrace
      env:
        GRADLE_OPTS: "-Dorg.gradle.logging.level=info"
    
    - name: Read Version
      id: read_version
      run: |
        VERSION=$(grep 'version ' build.gradle | cut -d "'" -f 2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Detected Version: $VERSION"
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: plugin-jar
        path: build/libs/*.jar
        retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq
    
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: plugin-jar
        path: build/libs/
    
    - name: List Downloaded Artifacts
      run: ls -l build/libs/
    
    - name: Check if Version Exists
      id: check_release
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      run: |
        VERSION="${{ needs.build.outputs.version }}"
        echo "Checking for existing release with tag v$VERSION"
        
        # 直接检查 tag 是否存在
        TAG_CHECK=$(curl -s -H "Authorization: token ${{ secrets.RELEASE_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/v$VERSION")
        
        # 打印响应用于调试
        echo "Tag Check Response:"
        echo "$TAG_CHECK"
        
        # 如果 tag 不存在，允许创建 release
        if echo "$TAG_CHECK" | grep -q "message\":\"Not Found"; then
          echo "Tag not found, proceeding with release"
          echo "exists=not_found" >> $GITHUB_OUTPUT
        else
          echo "Tag already exists"
          echo "exists=found" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      if: steps.check_release.outputs.exists == 'not_found'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: v${{ needs.build.outputs.version }}
        release_name: Release ${{ needs.build.outputs.version }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      if: steps.check_release.outputs.exists == 'not_found'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/libs/MagicBlock-${{ needs.build.outputs.version }}.jar
        asset_name: MagicBlock-${{ needs.build.outputs.version }}.jar
        asset_content_type: application/java-archive
    
    - name: Debug Information
      if: always()
      run: |
        echo "Release Exists: ${{ steps.check_release.outputs.exists }}"
        echo "Version: ${{ needs.build.outputs.version }}"
